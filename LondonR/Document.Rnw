\documentclass{article}
\usepackage{amsmath}
\begin{document}
\title{London R Practice}
\author{Rob Hayward}
\maketitle
\section{Introduction}

This is a file to run through the presentation that was made at the September 2013 London R by Maarten Speekenbrink.  

I am not sure how to load the appropriate packages (so this can probably be deleted in the future).  However, I will do that in a chunk. The information is in the title:  dependent mixed models. This is to implement micture and hidden Markov models. 
<<packages, echo = FALSE, warning=FALSE, message=FALSE>>=
require('depmixS4')
@
\section{Mixed Models}
From the London R presentation. In a \emph{mixture model} each observation is assumed to be drawn from a number of distinct subpopulation (``component distributions'' according to Maarten).  The distribution from which the observation is drawn is not directly observable and therefore it is represented by a \emph{latent state}.  

A mixture distribution is defined as 
\begin{equation}
p(Y_1 = y) = \sum_{i - 1}^N p(Y_t = y|S_t = i)P(S_t = i)
\end{equation}
where,
\begin{itemize}
\item $S_t \in {1, \dots, N}$ denotes the latent state or class of observation t
\item $P(S_t = i)$ denots the probability of the latent state t equals i 
\item $p(Y_t = y|S_t = i)$ denotes the density of observation of $Y_t$ conditional on latent state being $S_t = i$.
\end{itemize}
\section{Perth Water Example}

\section{Change Model}
This is a model that assumes one or more discrete change points in the data. It may be the mean, trend or other parameters that may change. In this example with the S\&P 500 it is the mean and the standard deviation. There is a transition matrix that defines the change points.  For example, if there is one transition the matrix would be along the lines of 
\begin{equation*}
\begin{pmatrix}
p_1 & 1 - p_1 \\
0 & 1
\end{pmatrix}
\end{equation*}
Where $p_1$ is the probability that the system will be in state 1.  One there is a switch to state two.  This matrix can be extended for more states. Need to come back and look at this if I can get the data. 

\section{S\&P 500 Example}
<<SP, echo = TRUE, warning=FALSE, message=FALSE, tidy=TRUE>>=
library(TTR)
# load SP500 returns
Sys.setenv(tz = "UTC")
sp500 <- getYahooData("^GSPC", start = 19500101, 
                      end = 20120909, freq = "daily")
ep <- endpoints(sp500, on = "months", k = 1)
sp500 <- sp500[ep[2:(length(ep) - 1)]]
sp500$logret <- log(sp500$Close) - 
  lag(log(sp500$Close))
sp500 <- na.exclude(sp500)
@
Now plot the data to get an idea of what it looks like. 
<<plot, fig.height=4, fig.width = 6>>=
plot(sp500$logret, main = "S&P 500 log returns")
@
The aim is to identify the bull and bear markets. First set up the model (mod). This is a logistic regression ("logret") with two states. Then fit the model.   
<<bull, echo = TRUE>>=
mod <- depmix(logret ~ 1, nstates = 2, data = sp500)
set.seed(1)
fm2 <- fit(mod, verbose = FALSE)
@
The number of iterations and the log likelihood is printed.  Now summarise the information. 
<<Summary>>=
depmixS4::summary(fm2)
@


\end{document}